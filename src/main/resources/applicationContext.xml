<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
        
    <!-- 加载配置文件便于系统使用 -多个可用逗号分割-->
	<context:property-placeholder location="classpath*:/config.properties"
		ignore-resource-not-found="true" ignore-unresolvable="true" />
	<!--配置service相关配置-->
	<!--扫描service包下所有使用注解的类型-->
	<context:component-scan base-package="com.xiaoshabao.**.service" />
	<context:component-scan base-package="com.xiaoshabao.**.component" />
	<context:component-scan base-package="com.xiaoshabao.*.job" />
	
	<!-- redis 设置begin -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxIdle" value="${redis.maxIdle}"/><!-- 最大闲置 -->
        <property name="minIdle" value="${redis.minIdle}"/><!-- 最小闲置 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}"/><!-- 可以获取 -->
    </bean>  
    <!-- redis 配置,也可以把配置挪到properties配置文件中,再读取 -->
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
	    <constructor-arg index="2" value="${redis.port}"  name="port" type="int"/>
	    <constructor-arg index="3" value="5000"  name="timeout" type="int"/>
	    <constructor-arg index="1" value="${redis.host}" name="host" type="java.lang.String"/>
	</bean>
    <!--其他配置方式 使用spring自带的redis
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"  
        p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"  p:pool-config-ref="jedisPoolConfig"/>  
      
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">  
        <property name="connectionFactory"   ref="connectionFactory" />  
    </bean> 
    -->
	<!-- redis 设置end -->
	
	<!-- 任务调度 begin -->
	<bean name="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="updateAccessTokenTrigger" />
			</list>
		</property>
	</bean>
	<!--定义任务触发时间等-->
	<bean id="updateAccessTokenTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail">
			<ref bean="updateAccessTokenJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0/10 * * * ?</value>
		</property>
	</bean>
	<!--定义任务描述，所在类和方法等-->
	<bean id="updateAccessTokenJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="updateAccessTokenJob" />
		</property>
		<property name="targetMethod">
			<value>work</value>
		</property>
	</bean>
	<!-- 注入任务-->
	<bean id="updateAccessTokenJob" class="com.xiaoshabao.wechat.job.UpdateAccessTokenJob" />
	<!-- 任务调度 end -->
	
<!-- 项目自定义配置 begin-->
	<!-- web项目中获取项目session参数 -->
	<bean id="sessionParams" class="com.xiaoshabao.system.component.ContextHolderSystem" />
	
	<!-- 项目中获取项目token参数服务类 -->
	<bean id="tokenManager" class="com.xiaoshabao.wechat.component.TokenManager" >
		<property name="tokenService">
			<ref bean="${wechat.tokenService}" />
		</property>
	</bean>
	<!--表单引擎设置-->
	<bean id="formEngineComponet" class="com.xiaoshabao.webframework.ui.component.FormEngineComponet">
		<property name="elementSerivceType">
			<map>
				<entry key="default" value="defaultUIElement" />
				<entry key="select2" value="selectUIElement" />
				<entry key="list" value="dataTablesUIElement" />
			</map>	
		</property>
		
		<property name="sessionComponet">
			<ref bean="sessionParams" />
		</property>
		<property name="engineType">
			<map>
				<entry key="default" value="defaultTemplateFactoryImpl" />
			</map>	
		</property>
		<property name="elementType">
			<map>
				<entry key="default" value="defaultUIElement" />
				<entry key="select2" value="selectUIElement" />
				<entry key="list" value="dataTablesUIElement" />
			</map>	
		</property>
		<property name="templateType">
			<map>
				<entry key="view" value="viewTemplate" />
				<entry key="read" value="readTemplate" />
			</map>	
		</property>
	</bean>
<!-- 项目自定义配置 end-->
</beans>
